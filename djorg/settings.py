"""
Django settings for djorg project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from decouple import config, Csv
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

# ['*']
ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())
print('ALLOWED_HOSTS:', ALLOWED_HOSTS)
# localhost,127.0.0.1

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hotels', # <- HERE
    'rest_framework',
    'corsheaders',
    'rest_framework.authtoken',
]
from rest_framework.authentication import SessionAuthentication, BasicAuthentication,  TokenAuthentication

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    ],

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',    )
}

MIDDLEWARE = [
    # 'hotels', # not here but in `INSTALLED_APPS`
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    
]

ROOT_URLCONF = 'djorg.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djorg.wsgi.application'

test = config('DATABASE_URL')
# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
# print(dj_database_url.config(test))
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

DATABASES['default'] = dj_database_url.config(conn_max_age=600) # just keep going lol I am. I was fixing the engine to be the default

# So to my understanding, dj_database_url is a souped up decoupler
# It will read the DATABASE_URL key in the .env file, but instead of 
# outputting it as a string, it will output  a dictionary similar to what
# you have above. So you don't have to worry about that shape.
#Do I need to parse it then for the engine? idk hmm I just don't know how you pass it to it
# like the env DATABASE_URL it says we are supposed to pass it to it & it's seeming like
# i'm probably not which is why it's just an empty list still an emptty list still pulling it over
# what abotu when I got do my database in brouser and it tells me my ENgine value isn't supplied?
#then it seems kinds borked
# I'm also concerned about that, but i feel this is a "it's not broken until heroku says its broken"
# thing
#ImproperlyConfigured at /admin/settings.DATABASES is improperly configured. Please supply the ENGINE value. Check settings documentation for more details.
# I think too that I couldnt get this working locally, but heroku was fine. so it might be fine
# to keep on trucking
# whouldn't the databases default part then be inside the 100-105 & that's where
# like do I legit jsut take that databases line and just throw it wherever?
# haha sorry i'm in a meeting dude
# Syntax from readme:
#  DATABASES['default'] = dj_database_url.config(conn_max_age=600)
# if you read the above line, it's putting a 'default' property into the DATABASES dictionary
# if the default property already exists, the value will be overwritten with the new assignment
# to my understanding dj_database_url.config(conn_max_age=600) will output a dictionary that 
# will have that engine property and what not. Remember, I couldn't get this working locally,
# but if it works on heroku, that won't be a big problem ok lemme try it that way and keep going

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CORS_ORIGIN_ALLOW_ALL = True
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
