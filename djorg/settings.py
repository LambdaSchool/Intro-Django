# """
# Django settings for djorg project.
# Generated by 'django-admin startproject' using Django 2.1.
# For more information on this file, see
# https://docs.djangoproject.com/en/2.1/topics/settings/
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/2.1/ref/settings/
# """

# """
# Decouple 
# https://github.com/henriquebastos/python-decouple/blob/master/README.rst#understanding-the-cast-argument
# """

# """
# Database
# dj_database_url.config method returns a Django database connection dictionry, populated with all the data specified in your URL.
# https://github.com/kennethreitz/dj-database-url
# """

# import os
# from decouple import config
# #import dj_database_url

# # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# # Generate new key in python repl 
# # Run `import random`
# # ''.join([random.SystemRandom().choice
# # ('abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)') for i in range(50)])`
# SECRET_KEY = config('SECRET_KEY')

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = config('DEBUG', cast=bool)

# # Casting argument for ALLOWED_HOST is expected a list of hostnames
# #ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=lambda v: [s.strip() for s in v.split(',')])
# Allowed_HOSTS = []
# # Configuration
# # allow all host to do cross-site requests
# CORS_ORIGIN_ALLOW_ALL = True


# # Application definition#
# # add 'notes' or other apps that we created at the top of INSTALLED_APPS
# # Adding apps in this field, tells the project that the apps exist

# INSTALLED_APPS = [
#     'notes',
#     'rest_framework',
#     'corsheaders',
#     'rest_framework.authtoken',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
# ]

# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',        # Listen the response, need to be the top.
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',   # Above all the others but after security
#     'django.middleware.common.CommonMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'djorg.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'djorg.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/2.1/ref/settings/#databases
# """
# # Django backend using sqlite
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3', 
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
# """
# # Database using URL. sqlite:///PATH
# DATABASES = {
#     'default': dj_database_url.config(
#         default=config('DATABASE_URL')  
#     )
# }


# # Password validation
# # https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/2.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_L10N = True

# USE_TZ = True

# """
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
# WhiteNoise allows your web app to serve its own static files, making it a self-contained unit
# http://whitenoise.evans.io/en/stable/
# """

# STATIC_URL = '/static/'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# # Boilerplate to set up the permissions
# # This will allow read/write permissions
# # for logged in users and read only for anonymous users.

# # Import token. Need to add this immediately before REST_FRAMEWORK
# from rest_framework.authentication import SessionAuthentication, BasicAuthentication, TokenAuthentication

# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
#     ],
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework.authentication.BasicAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#         'rest_framework.authentication.TokenAuthentication',
#     ),
# }
"""

Django settings for djorg project.



Generated by 'django-admin startproject' using Django 2.1.



For more information on this file, see

https://docs.djangoproject.com/en/2.1/topics/settings/



For the full list of settings and their values, see

https://docs.djangoproject.com/en/2.1/ref/settings/

"""



import os

from decouple import config



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))





# Quick-start development settings - unsuitable for production

# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/



# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = config('SECRET_KEY')



# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = config('DEBUG', cast=bool)



ALLOWED_HOSTS = []







# Application definition



INSTALLED_APPS = [

    'cards',

    'rest_framework',

    'corsheaders',

    'django.contrib.admin',

    'django.contrib.auth',

    'django.contrib.contenttypes',

    'django.contrib.sessions',

    'django.contrib.messages',

    'django.contrib.staticfiles',

]



MIDDLEWARE = [

    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.common.CommonMiddleware',

    'django.middleware.security.SecurityMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',

    'django.middleware.common.CommonMiddleware',

    'django.middleware.csrf.CsrfViewMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',

    'django.contrib.messages.middleware.MessageMiddleware',

    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]



ROOT_URLCONF = 'djorg.urls'



TEMPLATES = [

    {

        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        'DIRS': [],

        'APP_DIRS': True,

        'OPTIONS': {

            'context_processors': [

                'django.template.context_processors.debug',

                'django.template.context_processors.request',

                'django.contrib.auth.context_processors.auth',

                'django.contrib.messages.context_processors.messages',

            ],

        },

    },

]



WSGI_APPLICATION = 'djorg.wsgi.application'





# Database

# https://docs.djangoproject.com/en/2.1/ref/settings/#databases



DATABASES = {

    'default': {

        'ENGINE': 'django.db.backends.sqlite3',

        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

    }

}





# Password validation

# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators



AUTH_PASSWORD_VALIDATORS = [

    {

        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',

    },

    {

        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',

    },

    {

        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',

    },

    {

        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',

    },

]





# Internationalization

# https://docs.djangoproject.com/en/2.1/topics/i18n/



LANGUAGE_CODE = 'en-us'



TIME_ZONE = 'UTC'



USE_I18N = True



USE_L10N = True



USE_TZ = True





# Static files (CSS, JavaScript, Images)

# https://docs.djangoproject.com/en/2.1/howto/static-files/



STATIC_URL = '/static/'



REST_FRAMEWORK = {

    'DEFAULT_PERMISSION_CLASSES': [

        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',

    ]

}



CORS_ORIGIN_ALLOW_ALL = True